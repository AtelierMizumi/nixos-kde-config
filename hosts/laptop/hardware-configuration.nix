# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [
    "xhci_pci"
    "thunderbolt"
    "vmd"
    "ahci"
    "nvme"
    "usb_storage"
    "usbhid"
    "sd_mod"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelParams = [
    "acpi_backlight=native"
    "i915.force_probe=46a6"
  ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/0c26eff3-fddd-41c3-98f2-02705a2ec2cc";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-2d2d6f61-bfa8-4802-88d3-ab19e925d4ae".device = "/dev/disk/by-uuid/2d2d6f61-bfa8-4802-88d3-ab19e925d4ae";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/0907-BC15";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  fileSystems."/home/thuanc177/Drives/Old-Linux-Drive" = {
    device = "/dev/disk/by-uuid/54d477d8-6b81-4548-a67f-99f6d3372198";
    fsType = "ext4";
    options = [
      "users"
      "auto"
      "nofail"
      "exec"
    ];
  };

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp43s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
